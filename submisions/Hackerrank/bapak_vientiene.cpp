#include<stdio.h>
using namespace std;

int main(){
	char M[4][4];
	int i,j,k,n,disk,cases;
	long long T[40][4][4];
	scanf("%d", &cases);
	while(cases--){
		scanf("%s", M[0]);
		scanf("%s", M[1]);
		scanf("%s", M[2]);
		scanf("%d", &disk);
		
		///?
		
		if( M[0][1] == '1') T[1][1][2] = 1;
		else if( M[0][2]=='1' && M[2][1] ) T[1][1][2]=2;
		else T[1][1][2]=0;
		
		if(M[0][2]=='1') T[1][1][3]=1;
		else if( M[0][1]=='1'  && M[0][2]=='1') T[1][1][3]=2;
		else T[1][1][3]==0;
		
		///?
		
		if(M[1][0] == '1') T[1][2][1]=1;
		else if( M[1][2] == '1' && M[2][0]=='1' ) T[1][2][1]=2;
		else T[1][2][1]=0;
		
		if(M[1][2]=='1') T[1][2][3] = 1;
		else if(M[1][0]=='1' && M[1][0]=='1') T[1][3][1] = 2;
		else T[1][3][1]=0;
		
		if(M[2][1]=='1') T[1][3][2]=1;
		else if(M[2][0]=='1' && M[0][1]=='1') T[1][3][2]=2;
		else T[1][3][2] = 0;
		
		for(i=2;i<=disk;i++){
			///?
			
			if(T[1][1][2]==1) T[i][1][2] = ( T[i-1][1][3] + T[i-1][3][2]+1 ) *
											 ( T[i-1][1][3] > 0 ) * ( T[i-1][3][2]>0);
			
			else T[i][1][2] = ( T[i-1][1][2] + T[i-1][2][1] + T[i-1][1][2]+2 ) *
							  ( T[i-1][1][2] > 0 ) * ( T[i-1][2][1]>0);
							  
			//?
			if(T[1][1][3]==1) T[i][1][3] = ( T[i-1][1][2] + T[i-1][2][3]+1 ) *
											 ( T[i-1][1][2] > 0 ) * ( T[i-1][2][3]>0);
			else T[i][1][3] = ( T[i-1][1][3] + T[i-1][3][1] + T[i-1][1][3]+2 ) *
							  ( T[i-1][1][3] > 0 ) * ( T[i-1][3][1]>0);
			
			
			if(T[1][2][1]==1) T[i][2][1] = ( T[i-1][2][3] + T[i-1][3][1]+1 ) *
											 ( T[i-1][2][3] > 0 ) * ( T[i-1][3][1]>0);
			else T[i][2][1] = ( T[i-1][2][1] + T[i-1][1][2] + T[i-1][2][1]+2 ) *
							  ( T[i-1][2][1] > 0 ) * ( T[i-1][1][2]>0);
			
			
			if(T[1][2][3]==1) T[i][2][3] = ( T[i-1][2][1] + T[i-1][1][3]+1 ) *
											 ( T[i-1][2][1] > 0 ) * ( T[i-1][1][3]>0);
			else T[i][2][3] = ( T[i-1][2][3] + T[i-1][3][2] + T[i-1][2][3]+2 ) *
							  ( T[i-1][2][3] > 0 ) * ( T[i-1][3][2]>0);
			
			
			if(T[1][3][1]==1) T[i][3][1] = ( T[i-1][3][2] + T[i-1][2][1]+1 ) *
											 ( T[i-1][3][2] > 0 ) * ( T[i-1][2][1]>0);
			else T[i][3][1] = ( T[i-1][3][1] + T[i-1][1][3] + T[i-1][3][1]+2 ) *
							  ( T[i-1][3][1] > 0 ) * ( T[i-1][1][3]>0);
							  
			
			
			if(T[1][3][2]==1) T[i][3][2] = ( T[i-1][3][1] + T[i-1][1][2]+1 ) *
											 ( T[i-1][3][1] > 0 ) * ( T[i-1][1][2]>0);
			else T[i][3][2] = ( T[i-1][3][2] + T[i-1][2][3] + T[i-1][3][2]+2 ) *
							  ( T[i-1][3][2] > 0 ) * ( T[i-1][2][3]>0);
							  
			
							  
			
		}
		///?
		
		if(T[disk][1][3]<=0) printf("Epic fail...\n");
		else printf("%lld\n", T[disk][1][3]);
		
		
	}
	return 0;
}
